/*
 * This file is autogenerated with bcop:
 * The Compiz option code generator
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef _MATEGRID_OPTIONS_H
#define _MATEGRID_OPTIONS_H

#include <core/core.h>

class MategridOptions : public CompOption::Class {
    public:
        enum Options {
            PutCenterKey,
            PutLeftKey,
            PutRightKey,
            PutTopKey,
            PutBottomKey,
            PutTopleftKey,
            PutToprightKey,
            PutBottomleftKey,
            PutBottomrightKey,
            PutMaximizeKey,
            PutRestoreKey,
            TopLeftCornerAction,
            TopEdgeAction,
            TopRightCornerAction,
            LeftEdgeAction,
            RightEdgeAction,
            BottomLeftCornerAction,
            BottomEdgeAction,
            BottomRightCornerAction,
            SnapoffMaximized,
            SnapbackWindows,
            LeftEdgeThreshold,
            RightEdgeThreshold,
            TopEdgeThreshold,
            BottomEdgeThreshold,
            DrawIndicator,
            OutlineColor,
            FillColor,
            IndicatorDirection,
            IndicatorType,
            BehindWindow,
            OptionNum
        };

        enum TopLeftCornerAction {
            TopLeftCornerActionNone = 0,
            TopLeftCornerActionBottomLeftCorner = 1,
            TopLeftCornerActionBottomHalf = 2,
            TopLeftCornerActionBottomRightCorner = 3,
            TopLeftCornerActionLeftHalf = 4,
            TopLeftCornerActionFillScreen = 5,
            TopLeftCornerActionRightHalf = 6,
            TopLeftCornerActionTopLeftCorner = 7,
            TopLeftCornerActionTopHalf = 8,
            TopLeftCornerActionTopRightCorner = 9,
            TopLeftCornerActionMaximize = 10,
        };

        enum TopEdgeAction {
            TopEdgeActionNone = 0,
            TopEdgeActionBottomLeftCorner = 1,
            TopEdgeActionBottomHalf = 2,
            TopEdgeActionBottomRightCorner = 3,
            TopEdgeActionLeftHalf = 4,
            TopEdgeActionFillScreen = 5,
            TopEdgeActionRightHalf = 6,
            TopEdgeActionTopLeftCorner = 7,
            TopEdgeActionTopHalf = 8,
            TopEdgeActionTopRightCorner = 9,
            TopEdgeActionMaximize = 10,
        };

        enum TopRightCornerAction {
            TopRightCornerActionNone = 0,
            TopRightCornerActionBottomLeftCorner = 1,
            TopRightCornerActionBottomHalf = 2,
            TopRightCornerActionBottomRightCorner = 3,
            TopRightCornerActionLeftHalf = 4,
            TopRightCornerActionFillScreen = 5,
            TopRightCornerActionRightHalf = 6,
            TopRightCornerActionTopLeftCorner = 7,
            TopRightCornerActionTopHalf = 8,
            TopRightCornerActionTopRightCorner = 9,
            TopRightCornerActionMaximize = 10,
        };

        enum LeftEdgeAction {
            LeftEdgeActionNone = 0,
            LeftEdgeActionBottomLeftCorner = 1,
            LeftEdgeActionBottomHalf = 2,
            LeftEdgeActionBottomRightCorner = 3,
            LeftEdgeActionLeftHalf = 4,
            LeftEdgeActionFillScreen = 5,
            LeftEdgeActionRightHalf = 6,
            LeftEdgeActionTopLeftCorner = 7,
            LeftEdgeActionTopHalf = 8,
            LeftEdgeActionTopRightCorner = 9,
            LeftEdgeActionMaximize = 10,
        };

        enum RightEdgeAction {
            RightEdgeActionNone = 0,
            RightEdgeActionBottomLeftCorner = 1,
            RightEdgeActionBottomHalf = 2,
            RightEdgeActionBottomRightCorner = 3,
            RightEdgeActionLeftHalf = 4,
            RightEdgeActionFillScreen = 5,
            RightEdgeActionRightHalf = 6,
            RightEdgeActionTopLeftCorner = 7,
            RightEdgeActionTopHalf = 8,
            RightEdgeActionTopRightCorner = 9,
            RightEdgeActionMaximize = 10,
        };

        enum BottomLeftCornerAction {
            BottomLeftCornerActionNone = 0,
            BottomLeftCornerActionBottomLeftCorner = 1,
            BottomLeftCornerActionBottomHalf = 2,
            BottomLeftCornerActionBottomRightCorner = 3,
            BottomLeftCornerActionLeftHalf = 4,
            BottomLeftCornerActionFillScreen = 5,
            BottomLeftCornerActionRightHalf = 6,
            BottomLeftCornerActionTopLeftCorner = 7,
            BottomLeftCornerActionTopHalf = 8,
            BottomLeftCornerActionTopRightCorner = 9,
            BottomLeftCornerActionMaximize = 10,
        };

        enum BottomEdgeAction {
            BottomEdgeActionNone = 0,
            BottomEdgeActionBottomLeftCorner = 1,
            BottomEdgeActionBottomHalf = 2,
            BottomEdgeActionBottomRightCorner = 3,
            BottomEdgeActionLeftHalf = 4,
            BottomEdgeActionFillScreen = 5,
            BottomEdgeActionRightHalf = 6,
            BottomEdgeActionTopLeftCorner = 7,
            BottomEdgeActionTopHalf = 8,
            BottomEdgeActionTopRightCorner = 9,
            BottomEdgeActionMaximize = 10,
        };

        enum BottomRightCornerAction {
            BottomRightCornerActionNone = 0,
            BottomRightCornerActionBottomLeftCorner = 1,
            BottomRightCornerActionBottomHalf = 2,
            BottomRightCornerActionBottomRightCorner = 3,
            BottomRightCornerActionLeftHalf = 4,
            BottomRightCornerActionFillScreen = 5,
            BottomRightCornerActionRightHalf = 6,
            BottomRightCornerActionTopLeftCorner = 7,
            BottomRightCornerActionTopHalf = 8,
            BottomRightCornerActionTopRightCorner = 9,
            BottomRightCornerActionMaximize = 10,
        };

        enum IndicatorDirection {
            IndicatorDirectionFromWindow = 0,
            IndicatorDirectionFromEdge = 1,
        };

        enum IndicatorType {
            IndicatorTypeOutline = 0,
        };

        typedef boost::function <void (CompOption *opt, Options num)> ChangeNotify;

        MategridOptions ();
        virtual ~MategridOptions ();

        virtual CompOption::Vector & getOptions ();
        virtual bool setOption (const CompString &name, CompOption::Value &value);

        CompAction & optionGetPutCenterKey ();
        void optionSetPutCenterKeyInitiate (CompAction::CallBack init);
        void optionSetPutCenterKeyTerminate (CompAction::CallBack term);
        void optionSetPutCenterKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutLeftKey ();
        void optionSetPutLeftKeyInitiate (CompAction::CallBack init);
        void optionSetPutLeftKeyTerminate (CompAction::CallBack term);
        void optionSetPutLeftKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutRightKey ();
        void optionSetPutRightKeyInitiate (CompAction::CallBack init);
        void optionSetPutRightKeyTerminate (CompAction::CallBack term);
        void optionSetPutRightKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutTopKey ();
        void optionSetPutTopKeyInitiate (CompAction::CallBack init);
        void optionSetPutTopKeyTerminate (CompAction::CallBack term);
        void optionSetPutTopKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutBottomKey ();
        void optionSetPutBottomKeyInitiate (CompAction::CallBack init);
        void optionSetPutBottomKeyTerminate (CompAction::CallBack term);
        void optionSetPutBottomKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutTopleftKey ();
        void optionSetPutTopleftKeyInitiate (CompAction::CallBack init);
        void optionSetPutTopleftKeyTerminate (CompAction::CallBack term);
        void optionSetPutTopleftKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutToprightKey ();
        void optionSetPutToprightKeyInitiate (CompAction::CallBack init);
        void optionSetPutToprightKeyTerminate (CompAction::CallBack term);
        void optionSetPutToprightKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutBottomleftKey ();
        void optionSetPutBottomleftKeyInitiate (CompAction::CallBack init);
        void optionSetPutBottomleftKeyTerminate (CompAction::CallBack term);
        void optionSetPutBottomleftKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutBottomrightKey ();
        void optionSetPutBottomrightKeyInitiate (CompAction::CallBack init);
        void optionSetPutBottomrightKeyTerminate (CompAction::CallBack term);
        void optionSetPutBottomrightKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutMaximizeKey ();
        void optionSetPutMaximizeKeyInitiate (CompAction::CallBack init);
        void optionSetPutMaximizeKeyTerminate (CompAction::CallBack term);
        void optionSetPutMaximizeKeyNotify (ChangeNotify notify);

        CompAction & optionGetPutRestoreKey ();
        void optionSetPutRestoreKeyInitiate (CompAction::CallBack init);
        void optionSetPutRestoreKeyTerminate (CompAction::CallBack term);
        void optionSetPutRestoreKeyNotify (ChangeNotify notify);

        int optionGetTopLeftCornerAction ();
        void optionSetTopLeftCornerActionNotify (ChangeNotify notify);

        int optionGetTopEdgeAction ();
        void optionSetTopEdgeActionNotify (ChangeNotify notify);

        int optionGetTopRightCornerAction ();
        void optionSetTopRightCornerActionNotify (ChangeNotify notify);

        int optionGetLeftEdgeAction ();
        void optionSetLeftEdgeActionNotify (ChangeNotify notify);

        int optionGetRightEdgeAction ();
        void optionSetRightEdgeActionNotify (ChangeNotify notify);

        int optionGetBottomLeftCornerAction ();
        void optionSetBottomLeftCornerActionNotify (ChangeNotify notify);

        int optionGetBottomEdgeAction ();
        void optionSetBottomEdgeActionNotify (ChangeNotify notify);

        int optionGetBottomRightCornerAction ();
        void optionSetBottomRightCornerActionNotify (ChangeNotify notify);

        bool optionGetSnapoffMaximized ();
        void optionSetSnapoffMaximizedNotify (ChangeNotify notify);

        bool optionGetSnapbackWindows ();
        void optionSetSnapbackWindowsNotify (ChangeNotify notify);

        int optionGetLeftEdgeThreshold ();
        void optionSetLeftEdgeThresholdNotify (ChangeNotify notify);

        int optionGetRightEdgeThreshold ();
        void optionSetRightEdgeThresholdNotify (ChangeNotify notify);

        int optionGetTopEdgeThreshold ();
        void optionSetTopEdgeThresholdNotify (ChangeNotify notify);

        int optionGetBottomEdgeThreshold ();
        void optionSetBottomEdgeThresholdNotify (ChangeNotify notify);

        bool optionGetDrawIndicator ();
        void optionSetDrawIndicatorNotify (ChangeNotify notify);

        unsigned short * optionGetOutlineColor ();
        unsigned short optionGetOutlineColorRed ();
        unsigned short optionGetOutlineColorGreen ();
        unsigned short optionGetOutlineColorBlue ();
        unsigned short optionGetOutlineColorAlpha ();
        void optionSetOutlineColorNotify (ChangeNotify notify);

        unsigned short * optionGetFillColor ();
        unsigned short optionGetFillColorRed ();
        unsigned short optionGetFillColorGreen ();
        unsigned short optionGetFillColorBlue ();
        unsigned short optionGetFillColorAlpha ();
        void optionSetFillColorNotify (ChangeNotify notify);

        int optionGetIndicatorDirection ();
        void optionSetIndicatorDirectionNotify (ChangeNotify notify);

        int optionGetIndicatorType ();
        void optionSetIndicatorTypeNotify (ChangeNotify notify);

        bool optionGetBehindWindow ();
        void optionSetBehindWindowNotify (ChangeNotify notify);


    protected:
        CompOption::Vector mOptions;

    private:
        std::vector<ChangeNotify> mNotify;

};


inline CompAction &
MategridOptions::optionGetPutCenterKey ()
{
    return mOptions[MategridOptions::PutCenterKey].value ().action ();
}

inline void
MategridOptions::optionSetPutCenterKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutCenterKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutCenterKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutCenterKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutCenterKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutCenterKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutLeftKey ()
{
    return mOptions[MategridOptions::PutLeftKey].value ().action ();
}

inline void
MategridOptions::optionSetPutLeftKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutLeftKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutLeftKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutLeftKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutLeftKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutLeftKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutRightKey ()
{
    return mOptions[MategridOptions::PutRightKey].value ().action ();
}

inline void
MategridOptions::optionSetPutRightKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutRightKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutRightKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutRightKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutRightKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutRightKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutTopKey ()
{
    return mOptions[MategridOptions::PutTopKey].value ().action ();
}

inline void
MategridOptions::optionSetPutTopKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutTopKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutTopKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutTopKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutTopKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutTopKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutBottomKey ()
{
    return mOptions[MategridOptions::PutBottomKey].value ().action ();
}

inline void
MategridOptions::optionSetPutBottomKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutBottomKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutBottomKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutBottomKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutBottomKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutBottomKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutTopleftKey ()
{
    return mOptions[MategridOptions::PutTopleftKey].value ().action ();
}

inline void
MategridOptions::optionSetPutTopleftKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutTopleftKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutTopleftKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutTopleftKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutTopleftKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutTopleftKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutToprightKey ()
{
    return mOptions[MategridOptions::PutToprightKey].value ().action ();
}

inline void
MategridOptions::optionSetPutToprightKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutToprightKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutToprightKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutToprightKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutToprightKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutToprightKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutBottomleftKey ()
{
    return mOptions[MategridOptions::PutBottomleftKey].value ().action ();
}

inline void
MategridOptions::optionSetPutBottomleftKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutBottomleftKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutBottomleftKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutBottomleftKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutBottomleftKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutBottomleftKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutBottomrightKey ()
{
    return mOptions[MategridOptions::PutBottomrightKey].value ().action ();
}

inline void
MategridOptions::optionSetPutBottomrightKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutBottomrightKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutBottomrightKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutBottomrightKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutBottomrightKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutBottomrightKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutMaximizeKey ()
{
    return mOptions[MategridOptions::PutMaximizeKey].value ().action ();
}

inline void
MategridOptions::optionSetPutMaximizeKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutMaximizeKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutMaximizeKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutMaximizeKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutMaximizeKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutMaximizeKey] = notify;
}

inline CompAction &
MategridOptions::optionGetPutRestoreKey ()
{
    return mOptions[MategridOptions::PutRestoreKey].value ().action ();
}

inline void
MategridOptions::optionSetPutRestoreKeyInitiate (CompAction::CallBack init)
{
    mOptions[MategridOptions::PutRestoreKey].value ().action ().setInitiate (init);
}

inline void
MategridOptions::optionSetPutRestoreKeyTerminate (CompAction::CallBack term)
{
    mOptions[MategridOptions::PutRestoreKey].value ().action ().setTerminate (term);
}

inline void
MategridOptions::optionSetPutRestoreKeyNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::PutRestoreKey] = notify;
}

inline int
MategridOptions::optionGetTopLeftCornerAction ()
{
    return mOptions[MategridOptions::TopLeftCornerAction].value ().i ();
}

inline void
MategridOptions::optionSetTopLeftCornerActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::TopLeftCornerAction] = notify;
}

inline int
MategridOptions::optionGetTopEdgeAction ()
{
    return mOptions[MategridOptions::TopEdgeAction].value ().i ();
}

inline void
MategridOptions::optionSetTopEdgeActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::TopEdgeAction] = notify;
}

inline int
MategridOptions::optionGetTopRightCornerAction ()
{
    return mOptions[MategridOptions::TopRightCornerAction].value ().i ();
}

inline void
MategridOptions::optionSetTopRightCornerActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::TopRightCornerAction] = notify;
}

inline int
MategridOptions::optionGetLeftEdgeAction ()
{
    return mOptions[MategridOptions::LeftEdgeAction].value ().i ();
}

inline void
MategridOptions::optionSetLeftEdgeActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::LeftEdgeAction] = notify;
}

inline int
MategridOptions::optionGetRightEdgeAction ()
{
    return mOptions[MategridOptions::RightEdgeAction].value ().i ();
}

inline void
MategridOptions::optionSetRightEdgeActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::RightEdgeAction] = notify;
}

inline int
MategridOptions::optionGetBottomLeftCornerAction ()
{
    return mOptions[MategridOptions::BottomLeftCornerAction].value ().i ();
}

inline void
MategridOptions::optionSetBottomLeftCornerActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::BottomLeftCornerAction] = notify;
}

inline int
MategridOptions::optionGetBottomEdgeAction ()
{
    return mOptions[MategridOptions::BottomEdgeAction].value ().i ();
}

inline void
MategridOptions::optionSetBottomEdgeActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::BottomEdgeAction] = notify;
}

inline int
MategridOptions::optionGetBottomRightCornerAction ()
{
    return mOptions[MategridOptions::BottomRightCornerAction].value ().i ();
}

inline void
MategridOptions::optionSetBottomRightCornerActionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::BottomRightCornerAction] = notify;
}

inline bool
MategridOptions::optionGetSnapoffMaximized ()
{
    return mOptions[MategridOptions::SnapoffMaximized].value ().b ();
}

inline void
MategridOptions::optionSetSnapoffMaximizedNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::SnapoffMaximized] = notify;
}

inline bool
MategridOptions::optionGetSnapbackWindows ()
{
    return mOptions[MategridOptions::SnapbackWindows].value ().b ();
}

inline void
MategridOptions::optionSetSnapbackWindowsNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::SnapbackWindows] = notify;
}

inline int
MategridOptions::optionGetLeftEdgeThreshold ()
{
    return mOptions[MategridOptions::LeftEdgeThreshold].value ().i ();
}

inline void
MategridOptions::optionSetLeftEdgeThresholdNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::LeftEdgeThreshold] = notify;
}

inline int
MategridOptions::optionGetRightEdgeThreshold ()
{
    return mOptions[MategridOptions::RightEdgeThreshold].value ().i ();
}

inline void
MategridOptions::optionSetRightEdgeThresholdNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::RightEdgeThreshold] = notify;
}

inline int
MategridOptions::optionGetTopEdgeThreshold ()
{
    return mOptions[MategridOptions::TopEdgeThreshold].value ().i ();
}

inline void
MategridOptions::optionSetTopEdgeThresholdNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::TopEdgeThreshold] = notify;
}

inline int
MategridOptions::optionGetBottomEdgeThreshold ()
{
    return mOptions[MategridOptions::BottomEdgeThreshold].value ().i ();
}

inline void
MategridOptions::optionSetBottomEdgeThresholdNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::BottomEdgeThreshold] = notify;
}

inline bool
MategridOptions::optionGetDrawIndicator ()
{
    return mOptions[MategridOptions::DrawIndicator].value ().b ();
}

inline void
MategridOptions::optionSetDrawIndicatorNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::DrawIndicator] = notify;
}

inline unsigned short *
MategridOptions::optionGetOutlineColor ()
{
    return mOptions[MategridOptions::OutlineColor].value ().c ();
}

inline unsigned short
MategridOptions::optionGetOutlineColorRed ()
{
    return mOptions[MategridOptions::OutlineColor].value ().c ()[0];
}

inline unsigned short
MategridOptions::optionGetOutlineColorGreen ()
{
    return mOptions[MategridOptions::OutlineColor].value ().c ()[1];
}


inline unsigned short
MategridOptions::optionGetOutlineColorBlue ()
{
    return mOptions[MategridOptions::OutlineColor].value ().c ()[2];
}


inline unsigned short
MategridOptions::optionGetOutlineColorAlpha ()
{
    return mOptions[MategridOptions::OutlineColor].value ().c ()[3];
}


inline void
MategridOptions::optionSetOutlineColorNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::OutlineColor] = notify;
}

inline unsigned short *
MategridOptions::optionGetFillColor ()
{
    return mOptions[MategridOptions::FillColor].value ().c ();
}

inline unsigned short
MategridOptions::optionGetFillColorRed ()
{
    return mOptions[MategridOptions::FillColor].value ().c ()[0];
}

inline unsigned short
MategridOptions::optionGetFillColorGreen ()
{
    return mOptions[MategridOptions::FillColor].value ().c ()[1];
}


inline unsigned short
MategridOptions::optionGetFillColorBlue ()
{
    return mOptions[MategridOptions::FillColor].value ().c ()[2];
}


inline unsigned short
MategridOptions::optionGetFillColorAlpha ()
{
    return mOptions[MategridOptions::FillColor].value ().c ()[3];
}


inline void
MategridOptions::optionSetFillColorNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::FillColor] = notify;
}

inline int
MategridOptions::optionGetIndicatorDirection ()
{
    return mOptions[MategridOptions::IndicatorDirection].value ().i ();
}

inline void
MategridOptions::optionSetIndicatorDirectionNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::IndicatorDirection] = notify;
}

inline int
MategridOptions::optionGetIndicatorType ()
{
    return mOptions[MategridOptions::IndicatorType].value ().i ();
}

inline void
MategridOptions::optionSetIndicatorTypeNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::IndicatorType] = notify;
}

inline bool
MategridOptions::optionGetBehindWindow ()
{
    return mOptions[MategridOptions::BehindWindow].value ().b ();
}

inline void
MategridOptions::optionSetBehindWindowNotify (MategridOptions::ChangeNotify notify)
{
    mNotify[MategridOptions::BehindWindow] = notify;
}



#endif
